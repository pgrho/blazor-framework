@typeparam T
@inherits ItemsControl<T>
<style>
    .scroller {
        display: flex;
        flex-flow: row wrap;
        position: absolute;
        left: 16px;
        right: 16px;
        top: 16px;
        bottom: 16px;
        overflow-y: scroll;
        -webkit-overflow-scrolling: touch;
    }

    .scroller-item {
        width: 192px;
        height: 128px;
        margin: 16px;
        box-sizing: border-box;
        border: 1px solid #888;
        border-radius: 4px;
        color: #ccc;
        overflow: hidden;
        font-size: 32px;
        user-select: none;
    }
</style>
<div @ref="@Element"
     class="scroller">
    @if (Source != null)
    {
        if (FirstIndex > 0)
        {
            <div data-itemindex="0"
                 data-itemlastindex="@(FirstIndex - 1)" style="margin:0;padding:0;background-color:yellow; height:@(FirstIndex * (ItemHeight) / _Columns)px;"></div>
        }
        if (FirstIndex >= 0)
        {
            var li = Math.Min(LastIndex, Source.Count - 1);
            for (var i = FirstIndex; i <= li; i++)
            {
                var e = Source[i];
                <div class="scroller-item"
                     data-itemindex="@i">
                    @(i): @e.GetHashCode()
                </div>
            }
        }
        if (LastIndex + 1 < Source.Count)
        {
            <div data-itemindex="@(LastIndex + 1)"
                 data-itemlastindex="@(Source.Count - 1)" style="margin:0;padding:0;background-color:green; height:@((Source.Count - LastIndex) * (ItemHeight) / _Columns)px;width:100%;"></div>
        }
    }
</div>
